version: "3"

services:
    nginx:
        dns:
            - 8.8.8.8
            - 4.4.4.4
        build:
            context: ./docker/images
            dockerfile: NGINX.Dockerfile
        working_dir: /var/www/html
        container_name: nginx_rent_room
        ports:
            - "81:80"
        volumes:
            - ./api:/var/www/html/api
            - ./frontend:/var/www/html/frontend
            - ./adminer:/var/www/html/adminer
            - ./docker/logs/nginx_log:/var/log/nginx
            - ./docker/config/nginx/api/app.conf:/etc/nginx/conf.d/api.rentroom.conf
            - ./docker/config/nginx/adminer/app.conf:/etc/nginx/conf.d/adminer.conf
            - ./docker/config/nginx/frontend/app.conf:/etc/nginx/conf.d/frontend.conf
        links:
            - php
            - mysql
        networks:
            - app-network
    php:
        build:
            context: ./docker/images
            dockerfile: PHP.Dockerfile
        container_name: php_rent_room
        volumes:
            - ./api:/var/www/html/api
            - ./adminer:/var/www/html/adminer
            - ./docker/logs/php_fpm_log:/var/log/php-fpm
            - ./docker/config/php-fpm/custom.ini:/usr/local/etc/php/conf.d/custom.ini
        networks:
            - app-network
    mysql:
        platform: linux/x86_64
        image: mysql:5.7
        container_name: mysql_rent_room
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            # MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./docker/mysql:/docker-entrypoint-initdb.d
        networks:
            - app-network
networks:
    app-network:
        driver: bridge
